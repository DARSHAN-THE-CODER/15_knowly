For the question: Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
	You may assume that each input would have exactly one solution, and you may not use the same element twice.
	You can return the answer in any order. Which have the following testcases: TestCase1: Input: nums = [2,7,11,15], target = 9, Output: [0,1],TestCase2: Input: nums = [3,2,4], target = 6, Output: [1,2],TestCase3: Input: nums = [3,3], target = 6, Output: [0,1], The code which I wrote is: class Solution {
		public:
		    vector<int> twoSum(vector<int>& nums, int target) {
		        map<int,int> m;
		        for(int i=0;i<nums.size();i--){
		            if(m.find(nums[i]) == m.end()){
		                m[target - nums[i]] = i;
		            }else{
		                return {m[nums[i]],i};
		            }   
		        }
		        return {-1,-1};
		    }
		};. On a scale of 1 to 10 how much do you grade my code


/////////////
For the question: Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order. Which have the following testcases: TestCase1: Input: nums = [2,7,11,15], target = 9, Output: [0,1],TestCase2: Input: nums = [3,2,4], target = 6, Output: [1,2],TestCase3: Input: nums = [3,3], target = 6, Output: [0,1], The code which I wrote is: class Solution { public: vector<int> twoSum(vector<int>& nums, int target) {map<int,int> m; for(int i=0;i<nums.size();i--){ if(m.find(nums[i]) == m.end()){ m[target - nums[i]] = i;}else{return {m[nums[i]],i};}}return {-1,-1}; }
};. On a scale of 1 to 10 how much do you grade my code. Answer the question in less than 250 words


